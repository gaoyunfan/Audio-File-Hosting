services:
  user-db:
    image: postgres:17-alpine
    restart: always
    shm_size: 128mb
    ports:
      - "5432:5432"
    volumes:
      - user_db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@test.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - "5050:80"
    depends_on:
      - user-db

  redis:
    image: redis:7.4-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  frontend:
    build: ./frontend
    restart: always
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /code
          ignore:
            - node_modules
        - action: rebuild
          path: ./frontend/package.json
    ports:
      - "3000:3000"
  user-service:
    build: ./backend/user-service
    restart: always
    ports:
      - "8000:8000"
    environment:
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - DB_HOST=${POSTGRES_HOST}
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - user-db
      - redis
    develop:
      watch:
        - action: sync
          path: ./backend/user-service/
          target: /code/user-service/
          ignore:
            - venv
            - __pycache__
            - .dockerignore
        - action: rebuild
          path: ./backend/user-service/requirements.txt
  
volumes:
  user_db_data:
  redis_data:
